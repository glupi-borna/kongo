@function sizeadapt($original) {
	// The app used to be written in such a way where there were
	// always 3 items onscreen (vertically) and each item was
	// 22vh tall.
	// This function converts the original value (relative to the
	// old size of the onscreen item) into the new, adaptive size.
	@return calc(var(--height) * #{$original / 22});
}

@function div($a, $b) {
	@return $a / $b;
}

@function shadowlist($color, $offset, $offset_step, $alpha, $alpha_step, $steps) {
	$str: "";
	@for $i from 1 through $steps {
		@if ($i != 1) {
			$str: $str + ",";
		}
		$str: $str + "0 " + $offset + " " + transparentize($color, $alpha);
		$offset: $offset + $offset_step;
		$alpha: $alpha + $alpha_step;
	}
	@return #{$str};
}

$primary: #3c3835;

$fontsize-0_72: sizeadapt(0.72);
$fontsize-1_25: sizeadapt(1.25);
$fontsize-1_3: sizeadapt(1.3);
$fontsize-5: sizeadapt(5);

// Item stuff
$small: 22vh;
$medium: 35.25vh;
$large: 75vh;
$scale-s: $small / $large;
$scale-m: $medium / $large;
$scale-l: $large / $large;
$shadow: 16px;
$shadowsteps: 25;
$shadowstep: 1 / $shadowsteps;
$invlarge: 1 / 75;

@font-face {
	font-family: ALSSchlange;
	src: url("fonts/alsschlangeregular.otf");
}
@font-face {
	font-family: "DIN Pro";
	src: url("fonts/DINPro-Bold.otf");
	font-size: bold;
}
@font-face {
	font-family: "DIN Pro";
	src: url("fonts/DINPro-Cond.otf");
	font-stretch: condensed;
}
@font-face {
	font-family: "DIN Pro";
	src: url("fonts/DINPro-CondBold.otf");
	font-stretch: condensed;
	font-size: bold;
}
@font-face {
	font-family: "DIN Pro";
	src: url("fonts/DINPro-CondMedium.otf");
	font-stretch: condensed;
	font-weight: normal;
}

@keyframes fadeout {
	0% {
		opacity: 1;
	}
	100% {
		opacity: 0;
	}
}

@keyframes load {
	0% {
		transform: translate(-50%, -50%) scale(0.1);
	}
	50% {
		transform: translate(-50%, -50%) scale(5);
	}
	100% {
		transform: translate(-50%, -50%) scale(0.1);
	}
}

@mixin loader {
	content: "";
	position: absolute;
	display: block;
	left: 50%;
	top: 50%;
	width: 10%;
	height: 10%;
	border-radius: 100%;
	background: transparentize(mix($primary, white, 50%), 0.5);
	animation: load 2s infinite;
	z-index: 2;
}

.no-overflow {
	overflow: hidden;
}

.scrollable {
	overflow: auto;
}

.table-container {
	position: relative;
}

table {
	border-collapse: separate;
	border-spacing: 0;
	min-width: 100%;

	thead {
		position: relative;
		z-index: 2;
	}

	tbody {
		position: relative;
		z-index: 1;
	}

	tfoot {
		position: relative;
		z-index: 2;
	}

	th {
		position: sticky;
		top: 0;
		font-family: "DIN Pro", sans;
		border-bottom: 2px solid $primary;
		background: white;
	}

	td, th {
		padding-left: 8px;
	}

	td {
		&[value_type="string"] details {
			width: max-content;
			min-width: 100%;
			max-width: 40ch;

			summary {
				&::-webkit-details-marker {
					display: none;
				}

				display: block;
				position: relative;
				color: $primary;
				background: transparent;
				text-align: left;
				font-family: "DIN Pro", sans;
				padding: 8px;
				padding-left: 24px;
				border: none;
				cursor: pointer;
				transition: opacity 0.1s;

				&::before {
					content: "▶";
					position: absolute;
					font-size: 12px;
					top: 50%;
					left: 12px;
					transform: translate(-50%, -50%);
				}

				&:disabled {
					opacity: 0;
				}

				&:hover, &:focus {
					background: transparentize($primary, 0.9);
				}

				&:active {
					background: transparentize($primary, 0.8);
				}
			}

			&[open] summary::before {
				content: "▼";
			}
		}
	}

	tr {
		&:nth-child(2n) td {
			background: #0001;
		}
		&.clickable {
			cursor: pointer;
			&:hover {
				background: transparentize($primary, 0.8);
			}
		}
	}
}

h1, h2, h3, h4, h5, h6 {
	font-family: "DIN Pro", sans;
	text-transform: uppercase;
}

html, body {
	background-color: white;
	background: url("graphics/PODLOGA.svg");
	background-size: 5%;
	color: $primary;
	padding: 0;
	margin: 0;
	width: 100vw;
	height: 100vh;
	overflow: hidden;
}

body {
	display: flex;
	flex-flow: column nowrap;
	justify-content: space-between;
	align-items: center;
	font-family: ALSSchlange, serif;

	&:not([nofadein])::after {
		/* Fadein */
		content: '';
		display: block;
		position: absolute;
		left: 0;
		top: 0;
		width: 100vw;
		height: 100vh;
		opacity: 1;
		background: white;
		z-index: 100;
		pointer-events: none;
		animation: 0.5s fadeout forwards;
	}
}

@keyframes fade-in {
	from {
		opacity: 0;
	}
	to {
		opacity: 1;
		pointer-events: all;
	}
}

@keyframes fade-out {
	0% {
		opacity: 1;
	}
	100% {
		opacity: 0;
		pointer-events: none !important;
	}
}

body:not([logged_in=true]) .logged-in {
	display: none !important;
}

.display-none {
	display: none !important;
}

.hidden {
	opacity: 0;
	display: none;
}

.fadein, .fadeout {
	position: absolute;
	left: 0;
	top: 0;
}

.fadein {
	animation: fade-in 0.25s forwards;
}

.fadeout {
	animation: fade-out 0.25s forwards;
}

$offset: 16px;
.follow-mouse {
	position: fixed;
	max-width: calc(50vmin - #{$offset});
	max-height: calc(50vmin - #{$offset});
	background: #0009;
	backdrop-filter: blur(5px);
	padding: 8px;
	left: 0;
	top: 0;
	z-index: 100;
	transition: transform 0.1s;

	.mouse-left.mouse-top & {
		transform: translate(
			calc(var(--mouse-x) * 100vw + #{$offset}),
			calc(var(--mouse-y) * 100vh + #{$offset}));
	}

	.mouse-right.mouse-top & {
		transform: translate(
			calc(var(--mouse-x) * 100vh - 100% - #{$offset}),
			calc(var(--mouse-y) * 100vh + #{$offset}));
	}

	.mouse-left.mouse-bottom & {
		transform: translate(
			calc(var(--mouse-x) * 100vw + #{$offset}),
			calc(var(--mouse-y) * 100vh - 100% - #{$offset}));
	}

	.mouse-right.mouse-bottom & {
		transform: translate(
			calc(var(--mouse-x) * 100vw - 100% - #{$offset}),
			calc(var(--mouse-y) * 100vh - 100% - #{$offset}));
	}
}

img {
	opacity: 1;
	transition: opacity 0.25s;
	animation: pulse 0.5s infinite;

	&.not-loaded {
		opacity: 0;
	}

	&.icon {
		user-select: none;
	}

	header & {
		position: absolute;
		left: 50%;
		top: 50%;
		transform: translate(-50%, -50%);
		height: 125%;
	}

	footer & {
		position: absolute;
		left: 50%;
		top: 50%;
		height: 100%;
		width: 100%;
		transform: translate(-50%, -50%);
		height: calc(100% - 2vh);
		width: calc(100% - 2vh);
	}
}

header {
	flex: 0 0 auto;
	position: relative;

	display: flex;
	flex-flow: row nowrap;
	justify-content: flex-end;
	align-items: center;

	background: $primary;
	height: 13vh;
	width: 100%;

	box-sizing: border-box;
	padding: 8px;

	&.smaller {
		height: 6.5vh;
	}
}

footer {
	flex: 0 0 auto;
	position: absolute;
	background: white;
	bottom: 0;
	height: 4vh;
	width: 13vh;
	padding: 1vh;
}

.card {
	display: block;
	background: white;
	margin: 16px;
	padding: 16px;
	box-sizing: border-box;

	&.full {
		width: calc(100% - 32px);
		height: calc(100% - 32px);
	}
}

.full {
	width: 100%;
	height: 100%;
}

.flex-static {
	flex: 0 0 auto;
}

.flex-dynamic {
	flex: 1 1;
}

.flex-start {
	justify-content: flex-start;
}

.flex-end {
	justify-content: flex-end;
}

.flex-center {
	justify-content: center;
}

.flex-middle {
	align-items: center;
}

.flex-horizontal {
	display: flex;
	flex-flow: row nowrap;
}

.flex-vertical {
	display: flex;
	flex-flow: column nowrap;
}

.flex-inline {
	display: inline-flex;
}

.fit-content {
	max-width: fit-content;
	max-height: fit-content;
}

span.icon {
	font-size: 24px;
	user-select: none;

	&::after {
		content: "\00FE0E"
	}
}

button {
	background: $primary;
	color: white;
	padding: 8px 8px;
	text-transform: uppercase;
	border: none;
	font-family: "DIN Pro", sans-serif, sans;
	cursor: pointer;
	transition: opacity 0.1s;

	&.icon {
		background: transparent;
		color: $primary;

		&:disabled {
			opacity: 0;
		}

		&:hover, &:focus {
			background: transparentize($primary, 0.9);
		}

		&:active {
			background: transparentize($primary, 0.8);
		}
	}

	&:hover, &:focus {
		background: scale-color($primary, $lightness: 10%);
	}

	&:active {
		background: scale-color($primary, $lightness: -10%);
	}

	&:disabled, &.disabled {
		opacity: 0.5;
		pointer-events: none;
	}
}

input, textarea {
	background: white;
	color: $primary;
	border: 2px solid $primary;
	padding: 4px;
	font-family: "DIN Pro", sans-serif, sans;
	font-size: 14px;
	resize: none;

	&.changed {
		background: scale-color($primary, $saturation: 80%, $lightness: 80%);
	}
}

input[type="checkbox"] {
	display: block;
	position: relative;
	appearance: none;
	background: white;
	width: 16px !important;
	height: 16px !important;
	border: 2px solid $primary;
	cursor: pointer;

	&.changed {
		background: scale-color($primary, $saturation: 80%, $lightness: 80%);
	}

	&:checked::after {
		content: "✔";
		color: $primary;
		display: block;
		position: absolute;
		left: 50%;
		top: 50%;
		transform: translate(-50%, -50%);
	}
}

textarea {
	padding: 4px;
}

form.login-form {
	display: flex;
	flex-flow: column nowrap;
	position: absolute;
	left: 50%;
	top: 50%;
	transform: translate(-50%, -50%);

	input {
		margin-bottom: 16px;
	}
}

@keyframes spinner-dots {
	0% {
		box-shadow: -4vmax 2vmax 0 -1vmax currentColor,
					-2vmax 2vmax 0 0vmax currentColor,
					0vmax 2vmax 0 0vmax currentColor,
					2vmax 2vmax 0 0vmax currentColor;
	}
	100% {
		box-shadow: -2vmax 2vmax 0 0vmax currentColor,
					0vmax 2vmax 0 0vmax currentColor,
					2vmax 2vmax 0 0vmax currentColor,
					4vmax 2vmax 0 -1vmax currentColor;
	}
}

.spinner {
	position: absolute;
	display: block;
	left: 50%;
	top: 50%;
	width: 100%;
	height: 100%;
	transform: translate(-50%, -50%);
	background: transparent;
	z-index: 2;

	& ~ * {
		filter: blur(0.1vmax);
		opacity: 0.9;
	}

	&::after {
		content: "";
		display: block;
		position: absolute;
		border-radius: 100%;
		left: 50%;
		top: 50%;
		width: 1.5vmax;
		height: 1.5vmax;
		transform: translate(-50%, calc(-50% - 2vmax));
		background: transparent;
		animation: spinner-dots 1s linear infinite;
	}
}

article.food-element {
	height: var(--height);
	position: relative;
	margin-top: 6vh;
	margin-left: 5vw;
	margin-right: 5vw;
	box-sizing: border-box;
	transition: margin-right 0.25s, opacity 0.25s, height 0.2s, scale 0.5s;
	z-index: 1;
	$bias: 1;

	@media (max-aspect-ratio: 5/3) {
		&.focused { scale: 1.1; }
	}

	h1, p { transition: transform 0.25s, font-size 0.25s; }

	h1 {
		font: $fontsize-1_25 "DIN Pro";
		font-weight: bold;
		text-transform: uppercase;
	}

	p { font: $fontsize-0_72 ALSSchlange; }

	p.food-code, p.food-std, p.food-ref {
		position: absolute;
		margin: 0;
		bottom: 0;

		&.food-code {
			transform: translate(var(--padding), 50%);
		}
		&.food-std {
			right: 0;
			transform: translate(0, 50%);
		}
		&.food-ref {
			font: $fontsize-1_3 ALSSchlange;
			font-weight: bold;
			transform: translate(0, - calc(var(--padding)));
			right: 0;
		}
	}

	p.food-ref {
		position: absolute;
		font-weight: bold;
		margin: 0;
		bottom: var(--padding);
		right: 0;
	}

	p.food-code {
		position: absolute;
		bottom: 0;
		margin: 0;
		transform: translate(var(--padding), 50%);
	}

	p.food-discount {
		font: $fontsize-1_3 "DIN Pro";
		font-weight: medium;
		font-stretch: condensed;
		margin: 0;
		position: absolute;
		bottom: 0;
		transform: translateY(calc(-1 * #{$fontsize-5}));
		padding-left: calc(var(--padding) * 0.5);

		.food-original-price {
			text-decoration-line: line-through;
			text-decoration-thickness: 0.2vh;
			text-decoration-style: solid;
			text-decoration-color: $primary;
		}
	}

	p.food-price {
		font: $fontsize-5 "DIN Pro";
		font-weight: bold;
		margin: 0;
		position: absolute;
		bottom: 0;
		&::after {
			content: "kn";
			font-size: 50.4%;
		}
	}

	@at-root .food-image {
		position: absolute;
		height: $large;
		width: $large;
		z-index: 2;
		filter: brightness(110%);
		border-radius: 100%;
		transform-origin: top left;
		transform: scale(var(--scale));
		transition: transform 0.25s;

		img {
			&.not-loaded {
				background: white;
				opacity: 1;
				z-index: 1;
				min-width: 100%;
				min-height: 100%;
			}

			height: 100%;
			/* border-radius: 100%; */
			position: relative;
			z-index: 3;
		}

		&::after {
			@include loader;
		}

		&::before {
			/* Shadow */
			content: "";
			display: block;
			position: absolute;
			left: 0;
			top: calc(50% - #{$shadow});
			width: 100%;
			height: $shadow;
			z-index: 0;
			transform-origin: bottom;
			transform: rotate(45deg);
			opacity: 0.2;
			box-shadow: shadowlist($primary, $shadow, $shadow, 0, $shadowstep, $shadowsteps);
		}

		article.food-element:nth-child(2n+#{$bias}) & {
			right: 0;
			transform-origin: top right;
			transform: scale(var(--scale));

			&::before {
				transform: rotate(-45deg);
			}
		}
	}

	@at-root .food-details {
		display: flex;
		flex-flow: row-reverse nowrap;
		position: absolute;
		left: var(--half-height);
		width: calc(100% - var(--height) / 2);
		height: 100%;
		top: 0;
		background: white;
		padding: var(--padding);
		box-sizing: border-box;
		transition: width 0.2s, left 0.2s;

		.food-summary {
			flex: 2;
			position: relative;
			border-top: sizeadapt(0.3) solid $primary;
			box-sizing: border-box;
			height: calc(var(--height) - 2 * var(--padding));
			transition: height 0.25s;
		}

		.food-blank {
			transition: flex-basis 0.2s;
			height: calc(var(--height));
			flex: 0 0 var(--half-height);
		}

		.food-details-additional {
			display: flex;
			flex-flow: row;
			height: 0;
			width: 100%;
			opacity: 0;
			overflow: hidden;
			position: absolute;
			transition: height 0.1s, opacity 0.25s;
			top: 22vh;
			left: var(--padding);
			padding-top: 5.5vh;
			padding-left: var(--padding);
			padding-right: var(--padding);
			box-sizing: border-box;

			.food-details-column-left {
				flex: 3;
				margin-right: var(--padding);

				> * {
					border-top: 1px solid $primary;
					margin-top: var(--padding);
				}
			}

			.food-details-column-right {
				flex: 2;
				margin-left: var(--padding);
			}

			.food-nutrients-icons-icons {
				display: flex;
				flex-flow: row nowrap;
				overflow: hidden;
				padding-right: calc(var(--padding) * 2);

				p {
					font-size: calc(7.5vw * var(--factor));
				}

				> div {
					position: relative;
					flex: 1;
					margin: calc(var(--padding) * 0.1);

					img {
						width: 100%;
						max-height: 10vh;
					}

					.nutrient-icon-title, .nutrient-icon-value, .nutrient-icon-daily {
						font-family: "DIN Pro", sans-serif, sans;
						position: absolute;
						left: 0;
						top: 0;
						margin: 0;
						max-width: 80%;
						white-space: nowrap;
						overflow: hidden;
						text-overflow: ellipsis;
					}

					.nutrient-icon-title {
						font-weight: lighter;
						left: 50%;
						top: 10%;
						transform: translate(-50%, 0);
						font-stretch: condensed;
						text-transform: uppercase;
						text-align: center;
					}

					.nutrient-icon-value {
						left: 50%;
						top: calc(50% - 1em);
						transform: translate(-50%, -50%);

						.nutrient-icon-value-value {
							font-size: 200%;
						}

						.nutrient-icon-value-uom {
							font-size: 125%;
						}
					}

					.nutrient-icon-daily {
						color: white;
						left: 50%;
						top: 73%;
						transform: translate(-50%, -50%);

						.nutrient-icon-daily-value {
							font-size: 200%;
						}

						.nutrient-icon-daily-uom {
							font-size: 125%;
						}
					}
				}
			}

			.food-nutrients-table-table {
				font-size: $fontsize-0_72;

				tr, td, th {
					border: 0px solid transparent;
					background: transparent;
					padding: 0;
				}

				thead, tfoot {
					tr:first-child {
						td, th {
							border-top: var(--padding) solid $primary;
						}
					}
				}

				td, th {
					border-top: 1px solid $primary;

					&.subnutrient {
						padding-left: 3ch;
					}

					&.align-right {
						text-align: right !important;
					}
				}

				tr > * {
					text-align: right;
					&:first-child {
						text-align: left;
					}
				}

				tbody {
					tr:first-child {
						td, th {
							border-top: calc(0.5 * var(--padding)) solid $primary;
						}
					}
				}
			}
		}

		article.food-element:nth-child(2n+#{$bias}) & {
			left: 0;
			flex-flow: row nowrap;
		}
	}

	&.large {
		height: #{$large};

		.food-image, .food-blank, .food-summary {
			--height: #{$small};
			--half-height: #{$small / 2};
			--scale: #{$scale-s};
		}

		.food-details {
			width: calc(100% - 2vw);
			left: 2vw;
			right: 0;

			.food-blank {
				flex-basis: calc(#{$small} - 2vw);
			}

			.food-details-additional {
				height: calc(#{$large - $small} - var(--padding));
				width: calc(100% - var(--padding) * 2);
				opacity: 1;
			}
		}
	}

	&:first-child {
		margin-top: 4vh;
	}

	&:last-child {
		margin-bottom: 8vh;
	}
}

main {
	position: relative;
	flex: 1;
	width: 100vw;
	overflow: hidden;
	--height: #{$medium};
	--scale: #{$scale-m};
	--half-height: #{$medium / 2};
	--padding: #{$medium * 0.05};

	@media (max-aspect-ratio: 9/10) {
		--height: #{$small};
		--scale: #{$scale-s};
		--half-height: #{$small / 2};
		--padding: #{$small * 0.05};
	}

	@media (min-aspect-ratio: 5/3) {
		--height: #{$large};
		--scale: #{$scale-l};
		--half-height: #{$large / 2};
		--padding: #{$large * 0.05};
	}

	&.has-scrollbar {
		article.food-element {
			margin-right: 10vw;
		}
	}
}

div.scroll-container {
	position: relative;
	overflow: auto;
	height: 100%;
	width: 100%;
	box-sizing: content-box;
	z-index: 0;

	&::-webkit-scrollbar {
	  display: none;
	}

  -ms-overflow-style: none;
  scrollbar-width: none;
}

div.scrollbar {
	display: block;
	position: absolute;
	right: 5vw;
	top: 0;
	width: 2vw;
	height: calc(100% - 8vh);
	background: white;
	border: solid #a5a7aa 1.5px;
	border-radius: 100000px;
	box-sizing: border-box;
	transition: width 0.25s, opacity 0.25s;
	z-index: 1;
	user-select: none;
	margin-top: 4vh;
	margin-bottom: 4vh;
	opacity: 1;

	&.invisible {
		width: 0px;
		opacity: 0;
	}

	.scrollbar-nub {
		display: block;
		position: absolute;
		height: 0;
		top: 0;
		width: 100%;
		background: #a5a7aa;
		border-radius: 100000px;
		box-sizing: content-box;
		padding-top: 2px;
		transition: transform 0.1s, height 0.25s;
	}
}
